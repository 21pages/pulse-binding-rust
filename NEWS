Changes between 1.0.5 and 1.1.0:
---------------

 [pulse-binding]

 * Privatised the `from_raw` method of various objects, having become aware of the more granular
   `pub(crate)` type scope limiting syntax. Note, `from_raw_weak` methods designed for use in
   callbacks are still available.
 * Also privatised inner pointer attributes of structs in a few places on the same basis.
 * Privatised utils::unwrap_optional_callback function
 * Privatised timer event get_ptr method
 * As described below, a number of C function declarations in the sys crates now take certain object
   pointers immutably. A small number of functions in the binding have been similarly updated.
 * Promoted `self` reference to mutable for various methods across context, mainloops, streams,
   proplist and operation objects. Although our objects in these cases can be used immutably (no
   change in the wrapped pointer), we should reflect mutability needs of the operation being
   performed on the underlying C objects.

 [pulse-simple-binding]

 * Privatised SimpleInternal

 [pulse-sys]

 * Various functions have been changed to take immutable const pointers.
   There are numerous functions in the C API which take mutable pointers to objects where there is
   no intention to actually mutate those objects. Patches have been sent in to the PA project to
   correct many of these cases. There is no point in waiting for those to be accepted, so the
   change has been reflected in the C API description in the sys crate.

Changes between 1.0.4d and 1.0.5:
---------------

 [pulse-binding] (1.0.3 => 1.0.5)

 * Fixed and simplified Proplist iteration
    - Fixed infinite loop bug: I mis-read the documentation, it's the return value from the C
      function call that will be NULL when it reaches the end of the list, not the state variable.
    - Fixed infinite loop bug #2: The state tracking variable used for the underlying C function
      cannot be hidden within the iterate function, it causes an infinite loop whereby the function
      always just returns the first entry wrapped in `Some`. I don't know wtf I was thinking.
    - Implemented proper iterator symantics. The `iterate` method was renamed `iter` and now returns
      an actual Rust Iterator object, which makes iterating much more simple and tidy.
 * CVolume: make self for is_[muted|norm] immutable
 * Stream: fix double option wrapping of callback fn ptr with write methods
 * Stream: combine write_ext_free free_cb_data param with free_cb as tuple, as done elsewhere

 [pulse-simple-binding] (1.0.2 => 1.0.5)

 * Enabled pulse-simple doc test

 [pulse-sys] (1.0.2 => 1.0.5)

 * Minor, non-functional consistency fix only

Changes between 1.0.3 and 1.0.4d:
---------------

(no crate version changes, project only)

 * Use explicit test script for Travis, rather than relying on default, to ensure that the `--all`
   flag is passed to `cargo test`, which I thought was already done, but seems not from the logs and
   thus tests were not actually being done.
 * Fix Travis failures - add missing libpulse-mainloop-glib0 dependency to test environment.
 * Properly fix Travis tests - add pulseaudio dependency and get it started in test environment.

Changes between 1.0.2 and 1.0.3:
---------------

 [pulse-binding] (1.0.2 => 1.0.3)

 * Added `From` methods for transmuting between certain introspection structs and their `sys`
   counterparts. (They are identical, and only duplicated in the binding to add documentation).

Changes between 1.0.1 and 1.0.2:
---------------

 * Added travis badge to individual crates

Changes between 1.0.0 and 1.0.1:
---------------

 * Fixed toml file license string "LGPL-2.1" => "LGPL-2.1+"
 * Fixed toml file missing author email address
 * Removed obsolete readme doc links

Version 1.0:
---------------

 * Original release
